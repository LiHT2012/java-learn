访问权限   类   包  子类  其他包

public     ∨   ∨   ∨     ∨

protected    ∨   ∨   ∨     ×

default    ∨   ∨   ×     ×

private    ∨   ×   ×     ×

1.当重写父类成员函数时，子类的成员函数不能比父类的成员函数权限小，一般重写把权限定义相同即可。

2.public可以修饰任何类而且类名要与文件名相同，protected，private不可以修饰类。

* 如果类可以使用private来修饰，表示该包下的这个类不能被其它类访问，那么该类也失去了存在的意义，所以不能使用private来修饰类。

* 如果类可以使用protected来修饰，表示该类所在的包的其它类可以访问该类；该类所在的包的子包的类可以访问该类，但是包没有继承的概念，
所以后一句是不对。所以用protected来修饰类也是没有意义的。

3.default（不写默认指定default）同public一样可以修饰任何类而且类名要与文件名相同。
* 只想在同包下使用且不想继承复写，我们考虑默认default（不写修饰符）即可

类成员与方法访问控制从严:
1 ) 如果不允许外部直接通过 new 来创建对象,那么构造方法必须是 private 。
2 ) 工具类不允许有 public 或 default 构造方法。
* 工具类是一系列静态成员或方法的集合，意味着它不可以被实例化
*Java类如果没有声明构造函数，则会默认有一个公有的构造函数，因此需要给工具类至少声明一个非公有的构造函数。

3 ) 类非 static 成员变量并且与子类共享,必须是 protected 。
4 ) 类非 static 成员变量并且仅在本类使用,必须是 private 。
5 ) 类 static 成员变量如果仅在本类使用,必须是 private 。
6 ) 若是 static 成员变量,必须考虑是否为 final 。
7 ) 类成员方法只供类内部调用,必须是 private 。
8 ) 类成员方法只对继承类公开,那么限制为 protected 。

transient 关键字总结

https://segmentfault.com/a/1190000018401456

Java序列化技术正是将对象转变成一串由二进制字节组成的数组，可以通过将二进制数据保存到磁盘或者传输网络，磁盘或者网络接收者可以在对象的属类的模板上来反序列化类的对象，达到对象持久化的目的。

在 Java 中有两种实现序列化的方式，Serializable 和 Externalizable，可能大部分人只知道 Serializable 而不知道 Externalizable。

这两种序列化方式的区别是：实现了 Serializable 接口是自动序列化的，实现 Externalizable 则需要手动序列化，通过 writeExternal 和 readExternal 方法手动进行。

1）transient修饰的变量不能被序列化；

2）transient只作用于实现 Serializable 接口；

3）transient只能用来修饰普通成员变量字段；

4）不管有没有 transient 修饰，静态变量都不能被序列化；
